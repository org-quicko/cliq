// Auto-generated by @org.quicko/sheet-generator@6.0.2

import { Sheet, Block } from '@org.quicko/sheet-core';
import { Expose, Type } from 'class-transformer';
import { ValidateNested } from 'class-validator';
import 'reflect-metadata';
import { MemberTable } from '../../tables/member-table/MemberTable'

@Reflect.metadata('name', 'member_sheet')
export class MemberSheet extends Sheet {
    @Expose()
    @ValidateNested({ each: true })
    @Type(() => Block, {
        keepDiscriminatorProperty: true,
        discriminator: {
            property: 'name',
            subTypes: [
                {
					value: MemberTable,
					name: 'member_table'
				}
            ],
        },
    })
    blocks: Array<Block> = new Array<Block>();

    
    addMemberTable(table: MemberTable): void {
        this.addBlock(table);
    }

    getMemberTable(): MemberTable {
        if (!this.getBlock('member_table')) {
            this.addBlock(new MemberTable());
        }
        return this.getBlock('member_table') as MemberTable;
    }
}